"""
Django settings for barcode_configurator project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
import json
from pathlib import Path
BASE_DIR = Path(__file__).resolve().parent.parent
# export DEVELOPMENT_FLAG=local
if os.getenv('DEVELOPMENT_FLAG') == 'local':
    JSON_FILE_PATH = os.path.join(BASE_DIR, "localenv.json")
elif os.getenv('DEVELOPMENT_FLAG') == 'dev':
    JSON_FILE_PATH = os.path.join(BASE_DIR, "devenv.json")
elif os.getenv('DEVELOPMENT_FLAG') == 'prod':
    JSON_FILE_PATH = os.path.join(BASE_DIR, "prodenv.json")
else:
    JSON_FILE_PATH = os.path.join(BASE_DIR, "localenv.json")
fd = open(JSON_FILE_PATH, 'r')
jsondata = fd.read()
settings_details = json.loads(jsondata)
SECRET_KEY = "django-insecure-i))lv9@@1-&%&g1!u3zy2u_li5myq&-i@*cd4o9cp@l@iz!atf"
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#ALLOWED_HOSTS = []
# Application definition
INSTALLED_APPS = [
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        "common_app",
        "digital_twin_configure_app",
        "barcode_pattern_app",
        "part_family_app"
    ]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'common_app.middleware.barcode_middleware.CheckUserSession'
]
ROOT_URLCONF = 'barcode_configurator.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
WSGI_APPLICATION = 'barcode_configurator.wsgi.application'
DATABASES = {
        'default': {
            "ENGINE": settings_details['DB_ENGINE'],
            "NAME": settings_details['DB_NAME'],
            "USER": settings_details['DB_USER'],
            "PASSWORD": settings_details['DB_PASSWORD'],
            "HOST": settings_details['DB_HOST'],
            "PORT": settings_details['DB_PORT'],
            "TEST": {
                "NAME": settings_details['DB_TEST_NAME'],
            }
        }
    }
# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Kolkata'
USE_I18N = True
USE_TZ = True
STATIC_URL = 'static/'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
DIGITAL_TWIN_ACCESS_TOKEN=""
DIGITAL_TWIN_REFRESH_TOKEN=""
DIGITAL_TWIN_TOKEN_ITERATION=3
RUNSERVER_IP=settings_details['RUNSERVER_IP']
RUNSERVER_PORT=settings_details['RUNSERVER_PORT']
PRODUCTION_TYPE = os.getenv('DEVELOPMENT_FLAG')
if os.getenv('DEVELOPMENT_FLAG')=='' or os.getenv('DEVELOPMENT_FLAG')==None:
    PRODUCTION_TYPE='local'
DIGITAL_TWINS_URLS = settings_details['DIGITAL_TWINS_URLS']

